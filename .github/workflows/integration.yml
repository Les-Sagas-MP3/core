name: Integration

on:
  push:
    branches:
      - develop

jobs:

  verify-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      - name: Get release
        id: get_release
        run: echo ::set-output name=RELEASE_HTTP_CODE::$(curl -s -o out.html -w '%{http_code}'  https://github.com/les-sagas-mp3/core/releases/tag/${{ steps.get_version.outputs.VERSION }};)
      - name: Test release existence
        run: if [[ "${{ steps.get_release.outputs.RELEASE_HTTP_CODE }}" -eq "200" ]]; then exit 1; else exit 0; fi

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - name: Build with Maven
        run: ./mvnw -B clean spring-boot:build-image --file pom.xml

  publish-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - name: Build with Maven
        run: ./mvnw -B clean spring-boot:build-image --file pom.xml
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      - name: Tag the image for Docker Hub
        run: docker tag core:${{ steps.get_version.outputs.VERSION }} lessagasmp3/api:${{ steps.get_version.outputs.VERSION }}
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish to Docker Hub
        run: docker push lessagasmp3/api:${{ steps.get_version.outputs.VERSION }}

  deploy-heroku:
    needs: publish-docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
    - uses: sjdonado/heroku@0f16401029a67519b6547af7247983640996393a
    - name: Pull Docker Image
      run: docker pull lessagasmp3/api:${{ steps.get_version.outputs.VERSION }}
    - name: Tag the image
      run: docker tag lessagasmp3/api:${{ steps.get_version.outputs.VERSION }} registry.heroku.com/les-sagas-mp3-api/web
    - name: Get Heroku Tools
      run: wget -qO- https://toolbelt.heroku.com/install.sh | sh
    - name: Login to Heroku Registry
      run: echo "${{secrets.HEROKU_PASSWORD}}" | docker login -u "${{secrets.HEROKU_USERNAME}}" --password-stdin registry.heroku.com
    - name: Login to Heroku API
      run: heroku container:login
      env:
        HEROKU_API_KEY: ${{secrets.HEROKU_PASSWORD}}
    - name: Publish to Heroku Registry
      run: docker push registry.heroku.com/les-sagas-mp3-api/web
    - name: Release Heroku app
      run: heroku container:release web --app les-sagas-mp3-api
      env:
        HEROKU_API_KEY: ${{secrets.HEROKU_PASSWORD}}
